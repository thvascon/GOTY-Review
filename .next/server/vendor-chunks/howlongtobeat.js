"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/howlongtobeat";
exports.ids = ["vendor-chunks/howlongtobeat"];
exports.modules = {

/***/ "(rsc)/./node_modules/howlongtobeat/dist/main/hltbsearch.js":
/*!************************************************************!*\
  !*** ./node_modules/howlongtobeat/dist/main/hltbsearch.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HltbSearch = void 0;\nconst axios = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\");\nconst UserAgent = __webpack_require__(/*! user-agents */ \"(rsc)/./node_modules/user-agents/dist/index.js\");\nconst cheerio = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/commonjs/index.js\");\n/**\n * Takes care about the http connection and response handling\n */\nclass HltbSearch {\n    constructor() {\n        this.payload = {\n            \"searchType\": \"games\",\n            \"searchTerms\": [\"\"],\n            \"searchPage\": 1,\n            \"size\": 20,\n            \"searchOptions\": {\n                \"games\": {\n                    \"userId\": 0,\n                    \"platform\": \"\",\n                    \"sortCategory\": \"popular\",\n                    \"rangeCategory\": \"main\",\n                    \"rangeTime\": {\n                        \"min\": null,\n                        \"max\": null\n                    },\n                    \"gameplay\": {\n                        \"perspective\": \"\",\n                        \"flow\": \"\",\n                        \"genre\": \"\",\n                        \"difficulty\": \"\"\n                    },\n                    \"rangeYear\": {\n                        \"min\": \"\",\n                        \"max\": \"\"\n                    },\n                    \"modifier\": \"\"\n                },\n                \"users\": {\n                    \"sortCategory\": \"postcount\"\n                },\n                \"lists\": {\n                    \"sortCategory\": \"follows\"\n                },\n                \"filter\": \"\",\n                \"sort\": 0,\n                \"randomizer\": 0,\n                \"useCache\": true\n            }\n        };\n    }\n    detailHtml(gameId, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let result = yield axios.get(`${HltbSearch.DETAIL_URL}${gameId}`, {\n                    headers: {\n                        'User-Agent': new UserAgent().toString(),\n                        'origin': 'https://howlongtobeat.com',\n                        'referer': 'https://howlongtobeat.com'\n                    },\n                    timeout: 20000,\n                    signal,\n                }).catch(e => { throw e; });\n                return result.data;\n            }\n            catch (error) {\n                if (error) {\n                    throw new Error(error);\n                }\n                else if (error.response.status !== 200) {\n                    throw new Error(`Got non-200 status code from howlongtobeat.com [${error.response.status}]\n          ${JSON.stringify(error.response)}\n        `);\n                }\n            }\n        });\n    }\n    search(query, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Use built-in javascript URLSearchParams as a drop-in replacement to create axios.post required data param\n            let search = Object.assign({}, this.payload);\n            search.searchTerms = query;\n            try {\n                if (!this.searchKey) {\n                    this.searchKey = yield this.getSearchKey();\n                }\n                const searchUrlWithKey = HltbSearch.SEARCH_URL + this.searchKey;\n                let result = yield axios.post(searchUrlWithKey, search, {\n                    headers: {\n                        \"User-Agent\": new UserAgent().toString(),\n                        'Accept': '*/*',\n                        \"Content-Type\": \"application/json\",\n                        \"Origin\": \"https://howlongtobeat.com\",\n                        \"Referer\": `https://howlongtobeat.com/`,\n                    },\n                    timeout: 20000,\n                    signal,\n                });\n                return result.data;\n            }\n            catch (error) {\n                if (error) {\n                    throw new Error(error);\n                }\n                else if (error.response.status !== 200) {\n                    throw new Error(`Got non-200 status code from howlongtobeat.com [${error.response.status}]\n              ${JSON.stringify(error.response)}\n            `);\n                }\n            }\n        });\n    }\n    getSearchKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield axios.get(HltbSearch.BASE_URL, {\n                headers: {\n                    \"User-Agent\": new UserAgent().toString(),\n                    origin: \"https://howlongtobeat.com\",\n                    referer: \"https://howlongtobeat.com\",\n                },\n            });\n            const html = res.data;\n            const $ = cheerio.load(html);\n            const scripts = $(\"script[src]\");\n            for (const el of scripts) {\n                const src = $(el).attr(\"src\");\n                if (!src.includes(\"_app-\")) {\n                    continue;\n                }\n                const scriptUrl = HltbSearch.BASE_URL + src;\n                try {\n                    const res = yield axios.get(scriptUrl, {\n                        headers: {\n                            \"User-Agent\": new UserAgent().toString(),\n                            origin: \"https://howlongtobeat.com\",\n                            referer: \"https://howlongtobeat.com\",\n                        },\n                    });\n                    const scriptText = res.data;\n                    const matches = [...scriptText.matchAll(HltbSearch.SEARCH_KEY_PATTERN)];\n                    const firstKey = matches[0][1];\n                    const secondKey = matches[0][2];\n                    return firstKey.concat(secondKey);\n                }\n                catch (error) {\n                    continue;\n                }\n            }\n            throw new Error(\"Could not find search key\");\n        });\n    }\n}\nHltbSearch.BASE_URL = 'https://howlongtobeat.com/';\nHltbSearch.DETAIL_URL = `${HltbSearch.BASE_URL}game?id=`;\nHltbSearch.SEARCH_URL = `${HltbSearch.BASE_URL}api/seek/`;\nHltbSearch.IMAGE_URL = `${HltbSearch.BASE_URL}games/`;\nHltbSearch.SEARCH_KEY_PATTERN = /\"\\/api\\/seek\\/\".concat\\(\"([a-zA-Z0-9]+)\"\\).concat\\(\"([a-zA-Z0-9]+)\"\\)/g;\nexports.HltbSearch = HltbSearch;\n//# sourceMappingURL=hltbsearch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/howlongtobeat/dist/main/hltbsearch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/howlongtobeat/dist/main/howlongtobeat.js":
/*!***************************************************************!*\
  !*** ./node_modules/howlongtobeat/dist/main/howlongtobeat.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HowLongToBeatParser = exports.HowLongToBeatEntry = exports.HowLongToBeatService = void 0;\nconst cheerio = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/commonjs/index.js\");\nconst levenshtein = __webpack_require__(/*! fast-levenshtein */ \"(rsc)/./node_modules/fast-levenshtein/levenshtein.js\");\nconst hltbsearch_1 = __webpack_require__(/*! ./hltbsearch */ \"(rsc)/./node_modules/howlongtobeat/dist/main/hltbsearch.js\");\nclass HowLongToBeatService {\n    constructor() {\n        this.hltb = new hltbsearch_1.HltbSearch();\n    }\n    /**\n     * Get HowLongToBeatEntry from game id, by fetching the detail page like https://howlongtobeat.com/game.php?id=6974 and parsing it.\n     * @param gameId the hltb internal gameid\n     * @return Promise<HowLongToBeatEntry> the promise that, when fullfilled, returns the game\n     */\n    detail(gameId, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let detailPage = yield this.hltb.detailHtml(gameId, signal);\n            let entry = HowLongToBeatParser.parseDetails(detailPage, gameId);\n            return entry;\n        });\n    }\n    search(query, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let searchTerms = query.split(' ');\n            let search = yield this.hltb.search(searchTerms, signal);\n            // console.log(`Found ${search.count} results`);\n            let hltbEntries = new Array();\n            for (const resultEntry of search.data) {\n                hltbEntries.push(new HowLongToBeatEntry('' + resultEntry.game_id, // game id is now a number, but I want to keep the model stable\n                resultEntry.game_name, '', // no description\n                resultEntry.profile_platform ? resultEntry.profile_platform.split(', ') : [], hltbsearch_1.HltbSearch.IMAGE_URL + resultEntry.game_image, [[\"Main\", \"Main\"], [\"Main + Extra\", \"Main + Extra\"], [\"Completionist\", \"Completionist\"]], Math.round(resultEntry.comp_main / 3600), Math.round(resultEntry.comp_plus / 3600), Math.round(resultEntry.comp_100 / 3600), HowLongToBeatService.calcDistancePercentage(resultEntry.game_name, query), query));\n            }\n            return hltbEntries;\n        });\n    }\n    /**\n     * Calculates the similarty of two strings based on the levenshtein distance in relation to the string lengths.\n     * It is used to see how similar the search term is to the game name. This, of course has only relevance if the search term is really specific and matches the game name as good as possible.\n     * When using a proper search index, this would be the ranking/rating and much more sophisticated than this helper.\n     * @param text the text to compare to\n     * @param term the string of which the similarity is wanted\n     */\n    static calcDistancePercentage(text, term) {\n        let longer = text.toLowerCase().trim();\n        let shorter = term.toLowerCase().trim();\n        if (longer.length < shorter.length) {\n            // longer should always have\n            // greater length\n            let temp = longer;\n            longer = shorter;\n            shorter = temp;\n        }\n        let longerLength = longer.length;\n        if (longerLength == 0) {\n            return 1.0;\n        }\n        let distance = levenshtein.get(longer, shorter);\n        return Math.round(((longerLength - distance) / longerLength) * 100) / 100;\n    }\n}\nexports.HowLongToBeatService = HowLongToBeatService;\n/**\n * Encapsulates a game detail\n */\nclass HowLongToBeatEntry {\n    constructor(id, name, description, \n    /* replaces playableOn */\n    platforms, imageUrl, timeLabels, gameplayMain, gameplayMainExtra, gameplayCompletionist, similarity, searchTerm) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n        this.platforms = platforms;\n        this.imageUrl = imageUrl;\n        this.timeLabels = timeLabels;\n        this.gameplayMain = gameplayMain;\n        this.gameplayMainExtra = gameplayMainExtra;\n        this.gameplayCompletionist = gameplayCompletionist;\n        this.similarity = similarity;\n        this.searchTerm = searchTerm;\n        this.playableOn = platforms;\n    }\n}\nexports.HowLongToBeatEntry = HowLongToBeatEntry;\n/**\n * Internal helper class to parse html and create a HowLongToBeatEntry\n */\nclass HowLongToBeatParser {\n    /**\n     * Parses the passed html to generate a HowLongToBeatyEntrys.\n     * All the dirty DOM parsing and element traversing is done here.\n     * @param html the html as basis for the parsing. taking directly from the response of the hltb detail page\n     * @param id the hltb internal id\n     * @return HowLongToBeatEntry representing the page\n     */\n    static parseDetails(html, id) {\n        const $ = cheerio.load(html);\n        let gameName = '';\n        let imageUrl = '';\n        let timeLabels = new Array();\n        let gameplayMain = 0;\n        let gameplayMainExtra = 0;\n        let gameplayComplete = 0;\n        gameName = $('div[class*=GameHeader_profile_header__]')[0].children[0].data.trim();\n        imageUrl = $('div[class*=GameHeader_game_image__]')[0].children[0].attribs.src;\n        let liElements = $('div[class*=GameStats_game_times__] li');\n        const gameDescription = $('.in.back_primary.shadow_box div[class*=GameSummary_large__]').text();\n        let platforms = [];\n        $('div[class*=GameSummary_profile_info__]').each(function () {\n            const metaData = $(this).text();\n            if (metaData.includes('Platforms:')) {\n                platforms = metaData\n                    .replace(/\\n/g, '')\n                    .replace('Platforms:', '')\n                    .split(',')\n                    .map(data => data.trim());\n                return;\n            }\n        });\n        // be backward compatible\n        let playableOn = platforms;\n        liElements.each(function () {\n            let type = $(this)\n                .find('h4')\n                .text();\n            let time = HowLongToBeatParser.parseTime($(this)\n                .find('h5')\n                .text());\n            if (type.startsWith('Main Story') ||\n                type.startsWith('Single-Player') ||\n                type.startsWith('Solo')) {\n                gameplayMain = time;\n                timeLabels.push(['gameplayMain', type]);\n            }\n            else if (type.startsWith('Main + Sides') || type.startsWith('Co-Op')) {\n                gameplayMainExtra = time;\n                timeLabels.push(['gameplayMainExtra', type]);\n            }\n            else if (type.startsWith('Completionist') || type.startsWith('Vs.')) {\n                gameplayComplete = time;\n                timeLabels.push(['gameplayComplete', type]);\n            }\n        });\n        return new HowLongToBeatEntry(id, gameName, gameDescription, platforms, imageUrl, timeLabels, gameplayMain, gameplayMainExtra, gameplayComplete, 1, gameName);\n    }\n    /**\n     * Utility method used for parsing a given input text (like\n     * &quot;44&#189;&quot;) as double (like &quot;44.5&quot;). The input text\n     * represents the amount of hours needed to play this game.\n     *\n     * @param text\n     *            representing the hours\n     * @return the pares time as double\n     */\n    static parseTime(text) {\n        // '65&#189; Hours/Mins'; '--' if not known\n        if (text.startsWith('--')) {\n            return 0;\n        }\n        if (text.indexOf(' - ') > -1) {\n            return HowLongToBeatParser.handleRange(text);\n        }\n        return HowLongToBeatParser.getTime(text);\n    }\n    /**\n     * Parses a range of numbers and creates the average.\n     * @param text\n     *            like '5 Hours - 12 Hours' or '2½ Hours - 33½ Hours'\n     * @return the arithmetic median of the range\n     */\n    static handleRange(text) {\n        let range = text.split(' - ');\n        let d = (HowLongToBeatParser.getTime(range[0]) +\n            HowLongToBeatParser.getTime(range[1])) /\n            2;\n        return d;\n    }\n    /**\n     * Parses a string to get a number\n     * @param text,\n     *            can be '12 Hours' or '5½ Hours' or '50 Mins'\n     * @return the ttime, parsed from text\n     */\n    static getTime(text) {\n        //check for Mins, then assume 1 hour at least\n        const timeUnit = text.substring(text.indexOf(' ') + 1).trim();\n        if (timeUnit === 'Mins') {\n            return 1;\n        }\n        let time = text.substring(0, text.indexOf(' '));\n        if (time.indexOf('½') > -1) {\n            return 0.5 + parseInt(time.substring(0, text.indexOf('½')));\n        }\n        return parseInt(time);\n    }\n}\nexports.HowLongToBeatParser = HowLongToBeatParser;\n//# sourceMappingURL=howlongtobeat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/howlongtobeat/dist/main/howlongtobeat.js\n");

/***/ })

};
;